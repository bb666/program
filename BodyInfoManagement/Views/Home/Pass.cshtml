@model BodyInfoManagement.Models.ViewModel.ChangePasswordModel

@{
    ViewBag.Title = "修改密码";
}

<div class="page-header">
    <h1 class="text-center">@ViewBag.Title</h1>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label sr-only" })
            <div>
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", style = "margin:0 auto", placeholder = "旧密码" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label sr-only" })
            <div>
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", style = "margin:0 auto", placeholder = "新密码" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label sr-only" })
            <div style="margin:0 auto">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", style = "margin:0 auto", placeholder = "确认密码" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div>
                <input type="submit" style="margin:0 auto" value="修改" class="btn btn-primary btn-block" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

